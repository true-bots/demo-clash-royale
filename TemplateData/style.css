/*
Этот файл предназначен для размещения в папке TemplateData вашего Unity билда.
Он управляет стилями HTML-шаблона, который загружается ВНУТРИ iframe.
Стили являются точной копией предоставленного вами референсного шаблона,
за исключением статической установки background-color для canvas.
*/

html {
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}
html, body {
    height: 100%;
}
canvas {
    display: block;
}
body {
    margin: 0;
    /* Устанавливает фон body, если html фон не достаточен */
    background-color: black; /* Соответствует html background-color */
    /* Возможно, потребуется overflow: hidden; если содержимое может выйти за пределы */
    overflow: hidden;
}

/* Note: Референсный шаблон использует ID #unityContainer для основного контейнера контента, */
/* и #unity-container для применения классов unity-desktop/mobile. */
#unity-container {
    width: 100%;
    height: 100%;
    /* Референсный CSS не задает явное позиционирование для #unity-container, */
    /* но оно может потребоваться для 100% ширины/высоты. Добавлено для надежности. */
    position: absolute;
    top: 0; left: 0;
}

#unity-canvas {
    width: 100%;
    height: 100%;
    /* Заменена переменная шаблона {{{ BACKGROUND_COLOR }}} на статическое значение. */
    /* Используется черный цвет, как и фон html. */
    background: black;
}

#loading-cover {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    /* Добавлен фон для loading-cover, если он не перекрывает фон body/html */
     background-color: black; /* Соответствует html background-color */
    z-index: 10; /* Убедитесь, что он поверх канваса */
}

#unity-loading-bar {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
     /* Добавлены отступы и фон для самого бара, как в предыдущей версии для лучшего вида */
     /* Эти стили НЕ были в вашем референсе, удалите их, если хотите строгую копию */
     max-width: 400px; /* Пример, можно убрать */
     padding: 20px;
     background-color: rgba(0, 0, 0, 0.7);
     border-radius: 10px;
}

#unity-logo {
    text-align: center;
    margin-bottom: 20px; /* Отступ под логотипом */
}
#unity-logo img {
    max-width: 100%; /* Максимальная ширина логотипа внутри его контейнера */
    height: auto;
    display: block; /* Изображение как блочный элемент */
}

#unity-progress-bar-empty {
    width: 80%; /* Ширина полосы относительно родителя (#unity-loading-bar) */
    height: 24px;
    margin: 10px 0; /* Отступы сверху и снизу */
    /* margin: 10px 20px 20px 10px; /* Отступы из референса, если flex позволяет */
    text-align: left;
    border: 1px solid white;
    padding: 2px;
    flex-shrink: 0; /* Не сжиматься в Flex контейнере */
}
#unity-progress-bar-full {
    width: 0%; /* Начальная ширина */
    height: 100%;
    background: white;
}

/* Стили для светлой темы, если ваш шаблон ее поддерживает (из референса) */
.light #unity-progress-bar-empty {
    border-color: black;
}
.light #unity-progress-bar-full {
    background: black;
}

/* Стили для кнопки фуллскрин (из референса) */
#unity-fullscreen-button {
    position: absolute;
    right: 10px;
    bottom: 10px;
    width: 38px;
    height: 38px;
    /* Убедитесь, что файл fullscreen-button.png находится в папке TemplateData */
    background: url('fullscreen-button.png') no-repeat center;
    background-size: contain;
    cursor: pointer;
    z-index: 11; /* Выше loading-cover */
}


/* Стили для спиннера (из референса) */
.spinner,
.spinner:after {
  border-radius: 50%;
  width: 5em; /* 5em = 50px при font-size: 10px */
  height: 5em;
}
.spinner {
  margin: 10px; /* Отступ из референса */
  font-size: 10px; /* Базовый размер для em */
  position: relative; /* или absolute, зависит от Flex контейнера */
  text-indent: -9999em;
  border-top: 1.1em solid rgba(255, 255, 255, 0.2);
  border-right: 1.1em solid rgba(255, 255, 255, 0.2);
  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);
  border-left: 1.1em solid #ffffff; /* Видимая часть спиннера */
  transform: translateZ(0);
  animation: spinner-spin 1.1s infinite linear;
  /* Если spinner находится в Flex контейнере #unity-loading-bar, он будет центрироваться Flexbox */
}
@keyframes spinner-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Стили для скрытия элементов, которые изначально не видны или скрываются скриптом */
/* Убедитесь, что index.html также устанавливает display: none там, где нужно изначально */
#loading-cover[style*="display: none"],
#unity-loading-bar[style*="display: none"],
#unity-progress-bar-empty[style*="display: none"],
#unity-fullscreen-button[style*="display: none"],
.spinner[style*="display: none"] {
    display: none !important; /* !important может потребоваться, чтобы переопределить inline стили из index.html */
}

/* Начальные стили для элементов загрузки */
/* Убедитесь, что эти display совпадают с display в HTML и логикой скрипта */
/* #loading-cover { display: flex; } */ /* Может быть установлено в HTML */
/* #unity-progress-bar-empty { display: none; } */ /* Может быть установлено в HTML */
/* .spinner { display: block; } */ /* Может быть установлено в HTML */

/* Возможно, стили для текста загрузки, если он добавлен в index.html */
/* #loading-cover p { color: white; font-family: sans-serif; font-size: 1em; } */