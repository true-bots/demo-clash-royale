/* TemplateData/style.css: Styles for the Unity WebGL HTML template */

html {
    box-sizing: border-box;
    background-color: #2D3748; /* Deep grey background */
}
*, *:before, *:after {
    box-sizing: inherit;
}
html, body {
    height: 100%;
}
canvas {
    display: block;
}
body {
    margin: 0;
    background-color: #2D3748; /* Deep grey background */
    overflow: hidden; /* Prevent scrollbars inside the iframe */
}

#unity-container {
    width: 100%; height: 100%;
    position: absolute; top: 0; left: 0;
}

#unity-canvas {
    width: 100%; height: 100%;
    background: #2D3748; /* Deep grey background */
    /* Styles to make canvas wider than clipper and centered will be applied via JS or more specific CSS if needed */
    /* For basic clipping, ensure canvas fills its container */
}

/* New clipper div to control the visible game area aspect ratio and hide overflow */
.game-clipper {
    position: relative;
    width: 100%; /* Take full width of parent */
    /* Maintain a portrait aspect ratio (e.g., 9:16) based on width */
    padding-top: calc(100% / (9 / 16)); /* Height relative to width */
    overflow: hidden; /* Hide content outside this box */
    margin: auto; /* Center the clipper */
    /* Add background color to the clipper if it should have a background when canvas doesn't fill it */
    background-color: #2D3748;
}

/* Ensure canvas fills the clipper's dimensions */
.game-clipper #unity-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* Remove background here if set above, or ensure it's consistent */
    background: #2D3748;
}


#loading-cover {
    position: absolute; top: 0; left: 0;
    width: 100%; height: 100%;
    display: flex; justify-content: center; align-items: center;
    background-color: #2D3748; /* Deep grey background */
    z-index: 10; /* Above canvas */
}

#unity-loading-bar {
    flex: 1 1 auto;
    display: flex; flex-direction: column; justify-content: center; align-items: center;
    max-width: 400px; padding: 20px;
    background-color: rgba(0, 0, 0, 0.7); /* Keep semi-transparent overlay */
    border-radius: 10px;
}

#unity-logo {
    text-align: center; margin-bottom: 10px; /* Reduced margin */
}
#unity-logo img { max-width: 100%; height: auto; display: block; }

#unity-progress-bar-empty {
    width: 80%; height: 24px;
    margin: 5px auto 5px auto; /* Adjusted margin */
    text-align: left;
    border: 1px solid white; padding: 2px; flex-shrink: 0;
}
#unity-progress-bar-full {
    width: 0%; height: 100%; background: white;
}

.light #unity-progress-bar-empty { border-color: black; }
.light #unity-progress-bar-full { background: black; }

#unity-fullscreen-button {
    position: absolute; right: 10px; bottom: 10px;
    width: 50px; height: 50px; /* Increased size */
    background: url('fullscreen-button.png') no-repeat center;
    background-size: contain; cursor: pointer;
    z-index: 11; /* Above loading-cover */
}

.spinner, .spinner:after {
  border-radius: 50%; width: 5em; height: 5em;
}
.spinner {
  margin: 10px; font-size: 10px; position: relative; text-indent: -9999em;
  border-top: 1.1em solid rgba(255, 255, 255, 0.2);
  border-right: 1.1em solid rgba(255, 255, 255, 0.2);
  border-bottom: 1.1em solid rgba(255, 255, 255, 0.2);
  border-left: 1.1em solid #ffffff;
  transform: translateZ(0); animation: spinner-spin 1.1s infinite linear;
}
@keyframes spinner-spin {
  0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); }
}

#loading-cover[style*="display: none"],
#unity-loading-bar[style*="display: none"],
#unity-progress-bar-empty[style*="display: none"],
#unity-fullscreen-button[style*="display: none"],
.spinner[style*="display: none"] {
    display: none !important; /* Override inline styles */
}

/* Optional: Style for loading text */
/* #loading-cover p { color: white; font-family: sans-serif; font-size: 1em; } */